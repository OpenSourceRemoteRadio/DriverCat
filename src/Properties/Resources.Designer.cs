//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Code_Automation_Tool.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Code_Automation_Tool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bigcat_logo {
            get {
                object obj = ResourceManager.GetObject("bigcat_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit Configuration:.
        /// </summary>
        internal static string Bit_Configuration_Heading {
            get {
                return ResourceManager.GetString("Bit_Configuration_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit Description:.
        /// </summary>
        internal static string Bit_Description_Heading {
            get {
                return ResourceManager.GetString("Bit_Description_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit Permission:.
        /// </summary>
        internal static string Bit_Permission_Heading {
            get {
                return ResourceManager.GetString("Bit_Permission_Heading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to typedef struct
        ///{
        ///    unsigned int Transfer_Type:1;    /**&lt; This field specifies whether command is polling or service type. */
        ///    unsigned int Module_Index:7;    /**&lt; Index of module to configure.  Maximum 128 modules can be configured*/
        ///    unsigned int Operation_Type:4;    /**&lt; Operation to be performed e.g Read, Write and Config. Supports maximum 16 operations.*/
        ///    unsigned int Instance:4;    /**&lt; Instance of module to configure.  Maximum 16 instances of each modules can be configured*/
        ///    unsi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Command_Header_Structure_Text {
            get {
                return ResourceManager.GetString("Command_Header_Structure_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BigCat Wireless.
        /// </summary>
        internal static string Company_Name {
            get {
                return ResourceManager.GetString("Company_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.bigcatwireless.com/.
        /// </summary>
        internal static string Company_Site {
            get {
                return ResourceManager.GetString("Company_Site", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to int fd;
        ///unsigned char ret;
        ///char number[4];
        ///char device_node[256];
        ///static pdevice_handler device_handler_ptr=NULL;
        ///static unsigned int device_num_of_instance=-1;
        ///
        ///unsigned int i=0;
        ///int pid;
        ///memory_map_resource *memory_map_resource_ptr;
        ///unsigned int num_of_resource=0;
        ///unsigned int current_resource=0;
        ///bus_address mmap_address;
        ///int service_index = 0;
        ///
        ///
        ///if(device_handler_ptr==NULL)
        ///{
        ///	memset(device_node,0,256);	//erase device_node
        ///	sprintf(device_node,&quot;/proc/%s/num_of_instance&quot;,&quot;module_name&quot;); [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string device_handler_function {
            get {
                return ResourceManager.GetString("device_handler_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to drv.
        /// </summary>
        internal static string Driver_Code_Folder_Name {
            get {
                return ResourceManager.GetString("Driver_Code_Folder_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #!/bin/bash
        ///PWD=$(pwd)
        ///COMPILE_REPORT_FILE=&quot;Report.txt&quot;
        ///GCC_ROOT_DIRECTORY=&quot;Enter GCC 3.8 root directory&quot;
        ///KERNEL_SOURCE_ROOT_DIR=&quot;Enter Linux 3.10 Kernel Root directory&quot;
        ///
        ///TODAY=$(date)
        ///HOST=$(hostname)
        ///USER_NAME=$(id -u -n)
        ///
        ///COMPILATION_PASS=1
        ///COMPILATION_FAILURE=0
        ///
        ///Driver_Compile()
        ///{
        ///	echo -e -n &quot;Compiling &quot;$2&quot; in &quot;$1&quot;\n&quot;
        ///
        ///	(cd $1 &amp;&amp; make clean ARCH=arm CROSS_COMPILE=$GCC_ROOT_DIRECTORY/gcc-linaro-arm-linux-gnueabihf-4.8-2013.12_linux/bin/arm-linux-gnueabihf- KDIR=$KERNEL_SOURCE_ROOT_DIR)
        ///
        ///        (cd $1 &amp; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Driver_Compile_Script_Content {
            get {
                return ResourceManager.GetString("Driver_Compile_Script_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define FIRST_MINOR 0
        ///#define MODULE_COUNT 1
        ///
        ///typedef volatile unsigned int * BusAddr;
        ///
        ///typedef struct
        ///{
        ///	BusAddr start_address;
        ///	unsigned int size_in_bytes;
        ///}__attribute__((__packed__))Physical_resource;
        ///
        ///
        ///typedef struct
        ///{
        ///	unsigned int signal_number;
        ///	int user_application_pid;
        ///	unsigned int signal_data;
        ///}__attribute__((__packed__))interrupt_signal_info;
        ///
        ///
        ///
        ///int read_num_proc(struct file *filp,char *buf,size_t count,loff_t *offp );
        ///int driver_platform_probe(struct platform_device *pdev [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string driver_header_content {
            get {
                return ResourceManager.GetString("driver_header_content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unsigned int current_irq = 0;
        ///unsigned int num_of_bytes_written ;
        ///interrupt_signal_info * current_instance_interrupt_signal_info_ptr;
        ///unsigned int module_char_name_size;
        ///	
        ///module_char_name_size = sizeof(DRIVER_MODULE_NAME)+2;
        ///module_char_name = kmalloc(module_char_name_size,GFP_KERNEL);
        ///num_of_bytes_written = snprintf(module_char_name,module_char_name_size-2,&quot;%s&quot;,DRIVER_MODULE_NAME);
        ///num_of_bytes_written = snprintf(module_char_name+num_of_bytes_written,3,&quot;%2d&quot;,*module_count_ptr);
        ///printk(KERN_INFO &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Driver_Probe_Function_Content {
            get {
                return ResourceManager.GetString("Driver_Probe_Function_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to int current_instance = 0;
        ///current_instance = driver_platform_remove(pdev,device_proc_dir_ptr,interrupt_signal_info_ptr,number_of_irqs);
        ///printk(KERN_INFO &quot;%s : Platform remove instance %d\n&quot;,DRIVER_MODULE_NAME,current_instance);
        ///kfree(interrupt_signal_info_ptr[current_instance]);
        ///*module_count_ptr=*module_count_ptr-1;
        ///return 0;
        ///.
        /// </summary>
        internal static string Driver_Remove_Function_Content {
            get {
                return ResourceManager.GetString("Driver_Remove_Function_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to soc_fpga.dts.
        /// </summary>
        internal static string DTS_File_Name {
            get {
                return ResourceManager.GetString("DTS_File_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hepta_modeule_list_to_be_added.
        /// </summary>
        internal static string DTS_search_string_to_replace {
            get {
                return ResourceManager.GetString("DTS_search_string_to_replace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://github.com/OpenSourceRemoteRadio/DriverCat/issues.
        /// </summary>
        internal static string Feedback_ID {
            get {
                return ResourceManager.GetString("Feedback_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define IOCTL_GET_NUM_RESOURCE _IOR(&apos;b&apos;,0,unsigned int *)
        ///#define IOCTL_GET_RESOURCES _IOR(&apos;b&apos;,1,memory_map_resource *)
        ///#define IOCTL_SET_PID _IOW(&apos;b&apos;,2,unsigned int *)
        ///#define IOCTL_GET_NUM_INTERRUPT _IOR(&apos;b&apos;,3,unsigned int *)
        ///#define IOCTL_GET_UIO_MINOR_NUMBER _IOR(&apos;b&apos;,4,int *)
        ///
        ///
        ///#define REGISTER_SIZE_16	2
        ///#define REGISTER_SIZE_32	4
        ///#define REGISTER_SIZE_64	8
        ///
        ///
        ////* define */
        ///
        ///#define BIT_ENABLE(x) (0x1&lt;&lt;x)
        ///#define BIT_DISABLE(x) ~(0x1&lt;&lt;x)
        ///
        ///#define RESERVED_MEM 0x20000000
        ///#define RESERVED_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string firmware_header_content {
            get {
                return ResourceManager.GetString("firmware_header_content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to inc.
        /// </summary>
        internal static string Include_Header_Code_Folder_Name {
            get {
                return ResourceManager.GetString("Include_Header_Code_Folder_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon IntelIcon {
            get {
                object obj = ResourceManager.GetObject("IntelIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pdevice_handler pmodule_name_handler = (pdevice_handler)module_name_handler_ptr;
        ///if(pmodule_name_handler-&gt;uio_irq_device_number &gt;=0 )
        ///{
        ///	pmodule_name_handler-&gt;ISR_callback_function_ptr = callback_function;
        ///	pmodule_name_handler-&gt;ISR_callback_argument = callback_argument;
        ///	pthread_create(&amp;(pmodule_name_handler-&gt;ISR_thread_handler),NULL, project_name_module_name_isr_thread,pmodule_name_handler);
        ///}
        ///.
        /// </summary>
        internal static string isr_register_function_statement {
            get {
                return ResourceManager.GetString("isr_register_function_statement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pdevice_handler pmodule_name_handler = (pdevice_handler)module_name_handler_ptr;
        ///
        ///int uio_fd;
        ///char number[4];
        ///char device_node[256];
        ///unsigned int no_of_interrupts_triggered = 0;
        ///unsigned char ret;
        ///
        ///memset(device_node,0,256);	//erase device_node
        ///sprintf(device_node,&quot;/dev/uio%d&quot;,pmodule_name_handler-&gt;uio_irq_device_number);
        ///
        ///uio_fd = open(device_node,O_RDONLY);
        ///
        ///if(uio_fd &lt;= 0)
        ///{
        ///	return NULL;
        ///}
        ///
        ///while(1)
        ///{
        ///	ret = read(uio_fd,number,4);
        ///	DEBUG_PRINT(DEBUG_LEVEL_INFO,(&quot;module_name %s Inter [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string isr_thread_function_statement {
            get {
                return ResourceManager.GetString("isr_thread_function_statement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ff200000.
        /// </summary>
        internal static string Light_Weight_Base_Address {
            get {
                return ResourceManager.GetString("Light_Weight_Base_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define APP_VERSION &quot;0.0.1&quot;
        ///int DebugLevel=DEBUG_LEVEL_ERROR;
        ///
        ////**
        /// * @brief Handler for signal from terminal or other application.
        /// * @param signal_number Number representing the signal from the terminal.
        /// */
        ///void project_name_signal_handler(int signal_number)
        ///{
        ///	printf(&quot;Received signal %d\n&quot;,signal_number);
        ///	int server_index = 0;
        ///	struct timespec join_timeout;
        ///	int return_int;
        ///
        ///	if(project_name_socket_manager.number_of_server !=0)
        ///	{
        ///		project_name_socket_manager.is_thread = false;
        ///		slee [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main_text_file {
            get {
                return ResourceManager.GetString("main_text_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///#ARCH=arm
        ///
        ///#CROSS_COMPILE=/opt/gcc-linaro-arm-linux-gnueabihf-4.7-2012.11-20121123_linux/bin/arm-linux-gnueabihf-
        ///
        ///obj-m := driver_name_to_replace
        ///
        ///#KDIR := /opt/linux-altera-3.7/
        ///
        ///PWD := $(shell pwd)
        ///
        ///all:
        ///	$(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules
        ///clean:
        ///	$(MAKE) -C $(KDIR) SUBDIRS=$(PWD) clean
        ///.
        /// </summary>
        internal static string Makefile {
            get {
                return ResourceManager.GetString("Makefile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to typedef struct
        ///{
        ///    char Header_String[3];    /**&lt; This is the first field of Ethernet Packet. Incoming packets will be checked for this string*/
        ///    unsigned int Id:8;    /**&lt; Unique Id for each incomming command. Supports 256 commands simultaenously.*/
        ///    unsigned int Length;    /**&lt; Number of bytes succeeding header. This includes Command and data.  Maximum 65536 bytes of command and data transfer possible*/
        ///	unsigned char server_index;
        ///    char pData[0];    /**&lt; Points to the memory that has com [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Packet_Header_Structure_Text {
            get {
                return ResourceManager.GetString("Packet_Header_Structure_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Project.
        /// </summary>
        internal static string Project_Name {
            get {
                return ResourceManager.GetString("Project_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define SERVER_PORT  &quot;50000&quot;
        ///#define MAX_SERVER_COUNT 1
        ///#define MAX_QUEUE_NODES 30  //0 and 1 are not acceptable
        ///#define CONNECTION_TIME_OUT_SEC 5
        ///#define SEND_TIME_OUT_SEC 5
        ///#define RECV_TIME_OUT_SEC 5
        ///
        ///#define TCP_KEEPALIVE_ENABLE 1
        ///#define TCP_KEEPCNT_VALUE 5
        ///#define TCP_KEEPIDLE_VALUE 5
        ///#define TCP_KEEPINTVL_VALUE 1
        ///
        ///typedef volatile unsigned int * bus_address;
        ///void * transport_read_thread(void *ptr);
        ///void * transport_write_thread(void *ptr);
        ///void * command_thread(void *ptr);
        ///void tcpCli [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string protocol_header_context {
            get {
                return ResourceManager.GetString("protocol_header_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hepta_Reg_Map.
        /// </summary>
        internal static string Reg_Map_Array_Typedef {
            get {
                return ResourceManager.GetString("Reg_Map_Array_Typedef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Register_Definition_Table.
        /// </summary>
        internal static string Register_Definition_Table_Name {
            get {
                return ResourceManager.GetString("Register_Definition_Table_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status : Busy.
        /// </summary>
        internal static string Status_Bar_Busy {
            get {
                return ResourceManager.GetString("Status_Bar_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status : Ready.
        /// </summary>
        internal static string Status_Bar_Ready {
            get {
                return ResourceManager.GetString("Status_Bar_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// *
        /// * @ingroup SocketManager
        /// * @brief Prints the command attributes.
        /// * @param pCmdHeader Pointer to the Command header.
        /// */
        ///
        /// void debug_dump_commandheader(pCommand_Header pCmdHeader){
        ///
        ///	DEBUG_PRINT(DEBUG_LEVEL_INFO,(&quot;OperationType %x \n&quot;,pCmdHeader-&gt;Operation_Type));
        ///	DEBUG_PRINT(DEBUG_LEVEL_INFO,(&quot;TransferType %x \n&quot;,pCmdHeader-&gt;Transfer_Type));
        ///	DEBUG_PRINT(DEBUG_LEVEL_INFO,(&quot;Module_Index %x \n&quot;,pCmdHeader-&gt;Module_Index));
        ///	DEBUG_PRINT(DEBUG_LEVEL_INFO,(&quot;Instance_Num %x \n&quot;,pCmdHeader-&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tcp_client_file_content {
            get {
                return ResourceManager.GetString("tcp_client_file_content", resourceCulture);
            }
        }
    }
}
