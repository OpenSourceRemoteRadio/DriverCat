//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Code_Automation_Tool.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4")]
        public int Code_Tab_Size {
            get {
                return ((int)(this["Code_Tab_Size"]));
            }
            set {
                this["Code_Tab_Size"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Test_Project")]
        public string Project_Name {
            get {
                return ((string)(this["Project_Name"]));
            }
            set {
                this["Project_Name"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Generate_Doxygen_Comments {
            get {
                return ((bool)(this["Generate_Doxygen_Comments"]));
            }
            set {
                this["Generate_Doxygen_Comments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("inc")]
        public string Code_Include_Directory_Name {
            get {
                return ((string)(this["Code_Include_Directory_Name"]));
            }
            set {
                this["Code_Include_Directory_Name"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("src")]
        public string Code_Source_Directory_Name {
            get {
                return ((string)(this["Code_Source_Directory_Name"]));
            }
            set {
                this["Code_Source_Directory_Name"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("BigCat")]
        public string Code_Author {
            get {
                return ((string)(this["Code_Author"]));
            }
            set {
                this["Code_Author"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Resrvd")]
        public string Code_Reserved_Keyword {
            get {
                return ((string)(this["Code_Reserved_Keyword"]));
            }
            set {
                this["Code_Reserved_Keyword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("/* ******************************************************************************" +
            "************************************\r\nCopyright (c) 2017, BigCat Wireless Pvt Lt" +
            "d\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, wi" +
            "th or without\r\nmodification, are permitted provided that the following condition" +
            "s are met:\r\n\r\n    * Redistributions of source code must retain the above copyrig" +
            "ht notice,\r\n      this list of conditions and the following disclaimer.\r\n\r\n    *" +
            " Redistributions in binary form must reproduce the above copyright\r\n      notice" +
            ", this list of conditions and the following disclaimer in the\r\n      documentati" +
            "on and/or other materials provided with the distribution.\r\n\r\n    * Neither the n" +
            "ame of the copyright holder nor the names of its contributors\r\n      may be used" +
            " to endorse or promote products derived from this software\r\n      without specif" +
            "ic prior written permission.\r\n\r\n\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT H" +
            "OLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDIN" +
            "G, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FO" +
            "R A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O" +
            "R CONTRIBUTORS BE LIABLE\r\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLA" +
            "RY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUB" +
            "STITUTE GOODS OR\r\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPT" +
            "ION) HOWEVER\r\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT" +
            " LIABILITY,\r\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT " +
            "OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." +
            "\r\n******************************************************************************" +
            "************************************ */")]
        public string License_Message {
            get {
                return ((string)(this["License_Message"]));
            }
            set {
                this["License_Message"] = value;
            }
        }
    }
}
